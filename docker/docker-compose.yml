services:
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    command: /home/app/web/entrypoint.sh
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=refupet_project.settings
      - PYTHONPATH=/home/app/web
      - DATABASE_URL=${DATABASE_URL}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_FORCE_HTTPS=${DJANGO_FORCE_HTTPS}
      - DJANGO_ENV=${DJANGO_ENV}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=${VITE_API_URL}
    restart: unless-stopped

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
